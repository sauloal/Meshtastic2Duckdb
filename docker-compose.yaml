services:
  server:
    image: meshtastic2duckdb:latest
    build:
      context: .
    restart: unless-stopped
    volumes:
    # FOR DEV ONLY
    #- "${PWD}/meshtastic2duckdb:/data/meshtastic2duckdb"
    - "${PWD}/meshtastic2duckdb/app/dbs/:/data/meshtastic2duckdb/app/dbs/"
    - "/dev/serial/:/dev/serial"
    ports:
    - "8000:8000"
    networks:
    - meshtastic
    env_file:
    - config.env
    command: ["make", "server"]
    environment:
      MESH_APP_HOST: "0.0.0.0"
      MESH_APP_PORT: 8000
    domainname: meshtastic
    hostname: server
    healthcheck:
      test: curl --fail http://localhost:8000/livez || exit 1
      interval: 10s
      timeout: 30s
      retries: 3
      start_period: 5s

  logger:
    image: meshtastic2duckdb:latest
    restart: unless-stopped
    privileged: true
    tty: true
    #volumes:
    # FOR DEV ONLY
    #- "${PWD}/meshtastic2duckdb:/data/meshtastic2duckdb"
    # FOR LOCAL STORAGE MODE
    #- "${PWD}/meshtastic2duckdb/app/dbs/:/data/meshtastic2duckdb/app/dbs/"
    depends_on:
      server:
        condition: service_healthy
    networks:
    - meshtastic
    env_file:
    - config.env
    environment:
      MESH_LOGGER_REMOTE_HTTP_HOST: server
      MESH_LOGGER_REMOTE_HTTP_PORT: 8000
      PYTHONUNBUFFERED: 0
    command: ["make", "logger"]
    domainname: meshtastic
    hostname: logger

networks:
  meshtastic:
